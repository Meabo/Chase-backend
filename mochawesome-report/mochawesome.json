{
  "stats": {
    "suites": 7,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2019-03-02T13:47:08.318Z",
    "end": "2019-03-02T13:47:08.336Z",
    "duration": 18,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "09e07666-085c-4984-89b5-2a86a1bb029b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "72bfc164-3cf6-4b22-8058-063b95f7c124",
        "title": "Authentication",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/auth.js",
        "file": "/tests/auth.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Authentication \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "new_user = new User(\"mehdi\", \"aboumehdi.pro@gmail.com\");\nsinon.replace(Firebase.AuthGateway, \"SignUp\", callback);\nsinon.replace(Firebase.AuthGateway, \"SignIn\", callback);\nsinon.replace(Firebase.AuthGateway, \"SignOut\", callback);",
            "err": {},
            "isRoot": false,
            "uuid": "272d8f53-139d-4469-9e3b-a2b33173e6bc",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Should Signup a user",
            "fullTitle": "Authentication Should Signup a user",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const isSignup = Firebase.AuthGateway.SignUp(\n  new_user.getEmail(),\n  \"password\"\n);\nassert.equal(isSignup, true);",
            "err": {},
            "isRoot": false,
            "uuid": "b1145519-831f-4d57-9b2f-47e4ddbf8e07",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Should Login a user",
            "fullTitle": "Authentication Should Login a user",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const isSignIn = Firebase.AuthGateway.SignIn(\n  new_user.getEmail(),\n  \"password\"\n);\nassert.equal(isSignIn, true);",
            "err": {},
            "isRoot": false,
            "uuid": "747097cc-6a67-4ecf-b381-f3b24ef7710e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Should Logout a user",
            "fullTitle": "Authentication Should Logout a user",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const isLogOut = Firebase.AuthGateway.SignOut();\nassert.equal(isLogOut, true);",
            "err": {},
            "isRoot": false,
            "uuid": "cd23868c-bc89-498f-9aa6-0bbe51446d8d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b1145519-831f-4d57-9b2f-47e4ddbf8e07",
          "747097cc-6a67-4ecf-b381-f3b24ef7710e",
          "cd23868c-bc89-498f-9aa6-0bbe51446d8d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7a62ca53-4469-4096-8af0-152b92cd70d2",
        "title": "ChaseMap engine",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/chasemap.js",
        "file": "/tests/chasemap.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "ChaseMap engine \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "let top_left = [48.8569443, 2.2940138];\nlet top_right = [48.8586221, 2.2963717];\nlet bot_left = [48.8523546, 2.3012814];\nlet bot_right = [48.8539637, 2.3035665];\nbounds = [top_left, top_right, bot_left, bot_right];",
            "err": {},
            "isRoot": false,
            "uuid": "3876c0b9-06a3-4439-b50d-781bb686a798",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creates a ChaseMap",
            "fullTitle": "ChaseMap engine Creates a ChaseMap",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let chasemap = new ChaseMap();\nassert.instanceOf(chasemap, ChaseMap);",
            "err": {},
            "isRoot": false,
            "uuid": "96590247-7236-4ec3-962a-a3b6edcf5707",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a ChaseMap with bounds",
            "fullTitle": "ChaseMap engine Creates a ChaseMap with bounds",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let chasemap = new ChaseMap(bounds);\nassert.deepEqual(chasemap.getBounds(), bounds);",
            "err": {},
            "isRoot": false,
            "uuid": "79632fb9-ff07-4779-a1e1-684ebdc301cf",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "96590247-7236-4ec3-962a-a3b6edcf5707",
          "79632fb9-ff07-4779-a1e1-684ebdc301cf"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8d8ad7c6-8468-4993-9c89-5ba2d2e1660e",
        "title": "ChaseObject engine",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/chaseobject.js",
        "file": "/tests/chaseobject.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creates a ChaseObject",
            "fullTitle": "ChaseObject engine Creates a ChaseObject",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let chaseObject = new ChaseObject();\nassert.instanceOf(chaseObject, ChaseObject);",
            "err": {},
            "isRoot": false,
            "uuid": "91214207-7407-4f12-8dde-446e9f2ed890",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a ChaseObject with a location",
            "fullTitle": "ChaseObject engine Creates a ChaseObject with a location",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let chaseObject_position = [48.8574884, 2.2955138];\nlet chaseObject = new ChaseObject(chaseObject_position);\nassert.strictEqual(chaseObject.getLocation(), chaseObject_position );",
            "err": {},
            "isRoot": false,
            "uuid": "225de20e-4a88-4e51-9ad1-a2731f27e3e0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "91214207-7407-4f12-8dde-446e9f2ed890",
          "225de20e-4a88-4e51-9ad1-a2731f27e3e0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "ebea241e-0946-45e0-b7a8-e221e8af9260",
        "title": "Game engine",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/game.js",
        "file": "/tests/game.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Game engine \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "let player = new Player(\"Mehdi\", [48.8556475, 2.2986304]);\nlet player1 = new Player(\"Bebert\", [48.8574884, 2.2955138]);\nplayers.push(player, player1);\nchaseobject = new ChaseObject([48.8574884, 2.2955138]);\nget_bounds();\nmap = new ChaseMap(bounds);",
            "err": {},
            "isRoot": false,
            "uuid": "9608e727-93f1-4699-8e0f-3aad27a74846",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creates a game",
            "fullTitle": "Game engine Creates a game",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "game = new Game();\nassert.instanceOf(game, Game);",
            "err": {},
            "isRoot": false,
            "uuid": "5dbd6242-1e60-4796-9d7a-9ff9192414d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a game with players",
            "fullTitle": "Game engine Creates a game with players",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "game = new Game(players);\nassert.strictEqual(game.getPlayers(), players);",
            "err": {},
            "isRoot": false,
            "uuid": "190a56e0-c28b-4dc7-8818-ff01815e5826",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates an objet in the game",
            "fullTitle": "Game engine Creates an objet in the game",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let game = new Game(players, chaseobject);\nassert.strictEqual(game.getObject(), chaseobject);",
            "err": {},
            "isRoot": false,
            "uuid": "0697352f-9d88-47f7-baa5-9bc80ea578d9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a map in the game",
            "fullTitle": "Game engine Creates a map in the game",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let game = new Game(players, chaseobject, map);\nassert.strictEqual(game.getMap(), map);",
            "err": {},
            "isRoot": false,
            "uuid": "0b28880e-fd6e-4e19-9008-027e2597446f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a history in the game",
            "fullTitle": "Game engine Creates a history in the game",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let game = new Game(players, chaseobject, map);\nassert.instanceOf(game.getHistory(), GameHistory);",
            "err": {},
            "isRoot": false,
            "uuid": "3c6fe2cd-bf1d-4353-a976-bd67b37223fc",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5dbd6242-1e60-4796-9d7a-9ff9192414d3",
          "190a56e0-c28b-4dc7-8818-ff01815e5826",
          "0697352f-9d88-47f7-baa5-9bc80ea578d9",
          "0b28880e-fd6e-4e19-9008-027e2597446f",
          "3c6fe2cd-bf1d-4353-a976-bd67b37223fc"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "450e795c-fc8c-4092-9923-0972f59ac06a",
        "title": "Location engine",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/location.js",
        "file": "/tests/location.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Location engine \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "player = new Player(\"Mehdi\", [48.8556475, 2.2986304]);\nlet top_left = [48.8569443, 2.2940138];\nlet top_right = [48.8586221, 2.2963717];\nlet bot_left = [48.8523546, 2.3012814];\nlet bot_right = [48.8539637, 2.3035665];\nbounds = [top_left, top_right, bot_left, bot_right];\nmap = new ChaseMap(bounds);",
            "err": {},
            "isRoot": false,
            "uuid": "a11af1cd-89db-4b00-b70f-2f1c519a7608",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Should return -1 if a player is inside the Map",
            "fullTitle": "Location engine Should return -1 if a player is inside the Map",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert.equal(\n  LocationUtils.robustPointInPolygon(map.getBounds(), player.getLocation()),\n  -1\n);",
            "err": {},
            "isRoot": false,
            "uuid": "9032be26-6dcf-42b9-ae68-0c9d1e27c358",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Should return 1 if a player is inside the Map",
            "fullTitle": "Location engine Should return 1 if a player is inside the Map",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "player = new Player(\"Mehdi\", [48.8514708, 2.2972489]);\nassert.equal(\n  LocationUtils.robustPointInPolygon(map.getBounds(), player.getLocation()),\n  1\n);",
            "err": {},
            "isRoot": false,
            "uuid": "80ac82a7-5187-4ddd-8260-686476c620a9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should give the distance 0 between 2 entities which are at the same pos",
            "fullTitle": "Location engine should give the distance 0 between 2 entities which are at the same pos",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert.equal(LocationUtils.distance(0, 0, 0, 0), 0);",
            "err": {},
            "isRoot": false,
            "uuid": "ac938210-32b8-42e7-91c3-ad3f621f001f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "9032be26-6dcf-42b9-ae68-0c9d1e27c358",
          "80ac82a7-5187-4ddd-8260-686476c620a9",
          "ac938210-32b8-42e7-91c3-ad3f621f001f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8897aded-2a1f-425a-9b11-ed83aa21da3b",
        "title": "player engine",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/player.js",
        "file": "/tests/player.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Creates a player",
            "fullTitle": "player engine Creates a player",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let player = new Player();\nassert.instanceOf(player, Player);",
            "err": {},
            "isRoot": false,
            "uuid": "7d2e26f1-42c7-463d-b609-e9a49881c5d3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a player with a pseudo",
            "fullTitle": "player engine Creates a player with a pseudo",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let pseudo = \"Mehdi\";\nlet player = new Player(pseudo);\nassert.strictEqual(player.getPseudo(), pseudo);",
            "err": {},
            "isRoot": false,
            "uuid": "aea39246-0d80-4b09-a619-726701c5804d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Creates a player with a pseudo and a location",
            "fullTitle": "player engine Creates a player with a pseudo and a location",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let pseudo = \"Mehdi\";\nlet location = [48.8556475, 2.2986304];\nlet player = new Player(pseudo, location);\nassert.strictEqual(player.getLocation(), location);",
            "err": {},
            "isRoot": false,
            "uuid": "30aec313-dd2f-4221-937a-156d21996ed8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Moves a player from a location to another",
            "fullTitle": "player engine Moves a player from a location to another",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let pseudo = \"Mehdi\";\nlet location = [48.8556475, 2.2986304];\nlet new_location = [48.8574884, 2.2955138];\nlet player = new Player(pseudo, location);\nplayer.moveTo(new_location);\nassert.strictEqual(player.getLocation(), new_location);",
            "err": {},
            "isRoot": false,
            "uuid": "e5424de4-8e72-4a9d-b09d-ff3b34cc5186",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7d2e26f1-42c7-463d-b609-e9a49881c5d3",
          "aea39246-0d80-4b09-a619-726701c5804d",
          "30aec313-dd2f-4221-937a-156d21996ed8",
          "e5424de4-8e72-4a9d-b09d-ff3b34cc5186"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "c41fb9bf-bb9f-4171-9e46-ffe986746c27",
        "title": "RobustInsidePolygon engine",
        "fullFile": "/Users/mehdiabou/Projects/Chase/Chase-backend/tests/robustpolygon.js",
        "file": "/tests/robustpolygon.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Test Inside or Outside Polygon",
            "fullTitle": "RobustInsidePolygon engine Test Inside or Outside Polygon",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let polygon = [[1, 1], [1, 2], [2, 2], [2, 1]];\nassert.equal(inside.robustPointInPolygon(polygon, [1.5, 1.5]), -1);\nassert.equal(inside.robustPointInPolygon(polygon, [1.2, 1.9]), -1);\nassert.equal(inside.robustPointInPolygon(polygon, [0, 1.9]), 1);\nassert.equal(inside.robustPointInPolygon(polygon, [1.5, 2]), 0);\nassert.equal(inside.robustPointInPolygon(polygon, [1.5, 2.2]), 1);\nassert.equal(inside.robustPointInPolygon(polygon, [3, 5]), 1);\nassert.equal(inside.robustPointInPolygon(polygon, [1.5, 2]), 0);",
            "err": {},
            "isRoot": false,
            "uuid": "66255a79-2552-4f95-8c17-57ae6f9b2491",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "66255a79-2552-4f95-8c17-57ae6f9b2491"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}